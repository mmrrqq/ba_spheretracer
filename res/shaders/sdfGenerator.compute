#version 430
layout(local_size_x = 1, local_size_y = 1) in;
layout(binding = 0) uniform sampler2D inTex;
layout(rgba32f, binding = 1) uniform image3D outTex;

struct Triangle
{
  vec3 p1;
  vec3 p2;
  vec3 p3;
};

void main() {  
  // get index in global work group i.e x,y position
  ivec3 pixel_coords = ivec3(gl_GlobalInvocationID.xyz);

  //get distance to object
  float depth = 1.0;  
  for (int i = 0; i < textureSize(inTex, 0).x; i += 3)
  {
    Triangle triangle;
    triangle.p1 = texture(inTex, vec2(i, 0)).xyz;
    triangle.p1 = texture(inTex, vec2(i + 1, 0)).xyz;
    triangle.p3 = texture(inTex, vec2(i + 2, 0)).xyz;
        
  }

  
  // output to a specific pixel in the image
  imageStore(outTex, pixel_coords, vec4(depth, depth, depth, 1.0));
}