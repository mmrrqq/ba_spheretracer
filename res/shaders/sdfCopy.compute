#version 430 core

layout(local_size_x = 16, local_size_y = 16, local_size_z = 4) in;
// layout(r32f, binding = 0) restrict readonly uniform image3D inTex;
layout(std430, binding = 0) readonly buffer inDepthData
{
  float depthData[];
};
layout(r32f, binding = 3) restrict writeonly uniform image3D outTex;

void main() 
{    
    memoryBarrier();
    barrier();
    ivec3 voxelCoords = ivec3(gl_GlobalInvocationID.xyz);

    ivec3 imgSize = imageSize(outTex);
    // if (voxelCoords.x >= imgSize.x || voxelCoords.y >= imgSize.y || voxelCoords.z >= imgSize.z) {        
    //     return;
    // }     

    int id = voxelCoords.x + imgSize.y * (voxelCoords.y + imgSize.z * voxelCoords.z); 

    memoryBarrier();    
    vec4 result = vec4(depthData[id], 0, 0, 0);        
    memoryBarrier();
    imageStore(outTex, voxelCoords, result);        
    memoryBarrier();
    barrier();
}